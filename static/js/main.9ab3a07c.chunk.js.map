{"version":3,"sources":["components/SearchBar.jsx","components/Song.jsx","components/SongList.jsx","components/Songs.jsx","components/PlayListsItem.jsx","components/SongsSelect.jsx","components/SongsPlaylist.jsx","components/PlayListSongs.jsx","components/PlayListsList.jsx","components/CreatePlaylist.jsx","components/Playlists.jsx","components/Music.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","useState","i","seti","style","fontSize","width","padding","type","placeholder","value","onChange","e","target","search","Song","className","src","thumbnailUrl","alt","margin","maxWidth","textAlign","boxShadow","borderRadius","id","title","onClick","deleteSong","SongList","list","length","map","ele","url","albumId","Songs","songList","SetSongList","searchList","setSeacrchList","useEffect","s","console","log","filter","toLowerCase","includes","PlayListsItem","name","display","justifyContent","color","created","onPlaylistSelect","colourStyles","control","styles","backgroundColor","option","data","isDisabled","isFocused","isSelected","cursor","multiValue","multiValueLabel","multiValueRemove","MyComponent","selectedList","setSelectedList","options","label","closeMenuOnSelect","isMulti","selectedPalyList","plistModified","JSON","parse","localStorage","getItem","element","playName","listed","Set","songs","setItem","stringify","toggle","addToPlaylist","schuffle","deleteSongFromPlayList","marginTop","PlayListSongs","addButton","setAddButton","setList","listSong","listMOd","push","updateInLocalStorage","shf","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","SongsPlaylist","PlayListsList","selected","setSelected","selectedplayList","setSelectedplayList","displayCreate","l","flexDirection","play","create","CreatePlaylist","Playlists","setDisplayCreate","t","Date","window","Music","song","setSong","setPlay","setSongList","fetch","then","res","json","result","error","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ab3a07c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction SearchBar(props) {\r\n  const [i, seti] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <input\r\n        style={{ fontSize: \"18px\", width: \"600px\", padding: \"10px\" }}\r\n        type=\"search\"\r\n        placeholder=\"search song\"\r\n        value={i}\r\n        // onKeyPress={(event) => {\r\n        //   if (event.key === \"Enter\") {\r\n        //     props.search(i);\r\n        //   }\r\n        // }}\r\n        onChange={(e) => {\r\n          seti(e.target.value);\r\n          props.search(i);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nfunction Song(props) {\r\n  return (\r\n    <div className=\"songindi\">\r\n      <img src={props.thumbnailUrl} alt={props.thumbnailUrl}></img>\r\n      <div\r\n        style={{\r\n          margin: \"20px 20px\",\r\n          maxWidth: \"600px\",\r\n          textAlign: \"left\",\r\n          boxShadow: \"0px 0px 5px 5px #9572cc\",\r\n          borderRadius: \"20px\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        <ul className=\"songsText\">\r\n          <li>\r\n            <span>{props.id}</span> {props.title}{\" \"}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <button\r\n          style={{ width: \"140px\", fontSize: \"18px\" }}\r\n          onClick={() => {\r\n            props.deleteSong(props.id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\nimport Song from \"./Song\";\r\n\r\nfunction SongList(props) {\r\n  return (\r\n    <div className=\"indiSong\">\r\n      {props.list && props.list.length !== 0 ? (\r\n        props.list.map((ele) => (\r\n          <Song\r\n            id={ele.id}\r\n            key={ele.title + ele.thumbnailUrl}\r\n            title={ele.title}\r\n            thumbnailUrl={ele.thumbnailUrl}\r\n            url={ele.url}\r\n            albumId={ele.albumId}\r\n            deleteSong={props.deleteSong}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>No Results for this search</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SongList from \"./SongList\";\r\n\r\nfunction Songs(props) {\r\n  const [songList, SetSongList] = useState(props.list);\r\n  const [searchList, setSeacrchList] = useState(songList);\r\n  useEffect(() => {\r\n    setSeacrchList(songList);\r\n  }, [songList]);\r\n\r\n  const deleteSong = (id) => {\r\n    console.log(\"deleting\", id);\r\n    SetSongList([...songList.filter((e) => e.id !== id)]);\r\n  };\r\n\r\n  const search = (s) => {\r\n    console.log(\"search\", s);\r\n\r\n    setSeacrchList([\r\n      ...songList.filter((e) => e.title.toLowerCase().includes(s)),\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar search={search} />\r\n      <SongList list={searchList} deleteSong={deleteSong} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Songs;\r\n","import React from \"react\";\r\n\r\nfunction PlayListsItem(props) {\r\n  return (\r\n    <div\r\n      id={props.name}\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        color: \"rgb(231, 207, 207)\",\r\n        fontSize: \"22px\",\r\n\r\n        margin: \"10px 0 5px 0\",\r\n      }}\r\n    >\r\n      <p>Name:{props.name}</p>\r\n      <p>\r\n        Created at: <em>{props.created}</em>\r\n      </p>\r\n      <button\r\n        style={{ width: \"140px\", fontSize: \"18px\" }}\r\n        onClick={() => props.onPlaylistSelect(props.name)}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayListsItem;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\n// function Value(props) {\r\n//   return (\r\n//     // <div style={{ background: \"green\" }}>\r\n//     //   <p>Value</p>\r\n//     // </div>\r\n//     <Songs list={props.list[0] && props.list[0].songs} />\r\n//   );\r\n// }\r\n\r\nconst colourStyles = {\r\n  control: (styles) => ({ ...styles, backgroundColor: \"white\" }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled\r\n        ? null\r\n        : isSelected\r\n        ? data.color\r\n        : isFocused\r\n        ? \"#fff\"\r\n        : null,\r\n      color: isDisabled\r\n        ? \"#ccc\"\r\n        : isSelected\r\n        ? \"#f0f\" > 2\r\n          ? \"white\"\r\n          : \"black\"\r\n        : \"#00f\",\r\n      cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n      \":active\": {\r\n        ...styles[\":active\"],\r\n        backgroundColor: !isDisabled && (isSelected ? \"#f00\" : \"#f00\"),\r\n      },\r\n    };\r\n  },\r\n  multiValue: (styles, { data }) => {\r\n    return {\r\n      ...styles,\r\n      backgroundColor: \"#fff\",\r\n    };\r\n  },\r\n  multiValueLabel: (styles, { data }) => ({\r\n    ...styles,\r\n    color: \"#f00\",\r\n  }),\r\n  multiValueRemove: (styles, { data }) => ({\r\n    ...styles,\r\n    color: \"#f00\",\r\n    \":hover\": {\r\n      backgroundColor: \"#ff0\",\r\n      color: \"white\",\r\n    },\r\n  }),\r\n};\r\n\r\nexport default function MyComponent(props) {\r\n  const [selectedList, setSelectedList] = useState([]);\r\n  const options = props.list.map((ele) => {\r\n    return {\r\n      value: ele.title,\r\n      label: ele.title,\r\n    };\r\n  });\r\n\r\n  const addToPlaylist = () => {\r\n    let selectedPalyList = selectedList.map((e) => e.value);\r\n    let plist = JSON.parse(localStorage.getItem(\"playLists\"));\r\n    let plistModified = plist.map((element) => {\r\n      if (element.name === props.playName) {\r\n        const listed = new Set([...element.songs, ...selectedPalyList]);\r\n        element.songs = [...listed];\r\n      }\r\n      return element;\r\n    });\r\n    localStorage.setItem(\"playLists\", JSON.stringify(plistModified));\r\n    props.toggle();\r\n  };\r\n\r\n  return (\r\n    <div className=\"songtextcontainer\" style={{ width: \"100%\" }}>\r\n      <Select\r\n        closeMenuOnSelect={false}\r\n        isMulti\r\n        options={options}\r\n        styles={colourStyles}\r\n        placeholder={\"Search for  song\"}\r\n        onChange={(e) => {\r\n          console.log(\"reat-select\", e);\r\n\r\n          setSelectedList(e);\r\n        }}\r\n      />\r\n      <button onClick={() => addToPlaylist()}>Add song +</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Songs(props) {\r\n  return (\r\n    <div>\r\n      {props.list.songs.length > 0 && (\r\n        <div className=\"ShuffleButton\">\r\n          <button\r\n            style={{ width: \"23%\" }}\r\n            onClick={() => {\r\n              props.schuffle();\r\n            }}\r\n          >\r\n            Schuffle\r\n          </button>\r\n        </div>\r\n      )}\r\n      <div className=\"playlistSongContainer\">\r\n        {props.list.songs.length > 0 ? (\r\n          props.list.songs.map((e) => (\r\n            <div className=\"songindi\">\r\n              <div\r\n                style={{\r\n                  margin: \"20px 20px\",\r\n                  width: \"500px\",\r\n                  textAlign: \"left\",\r\n                  boxShadow: \"0px 0px 5px 5px #9572cc\",\r\n                  borderRadius: \"20px\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                <ul className=\"songsText\"></ul>\r\n                <p style={{ fontSize: \"18px\", color: \"white\" }}>{e}</p>\r\n              </div>\r\n\r\n              <div>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    fontSize: \"18px\",\r\n                    color: \"white\",\r\n                  }}\r\n                  onClick={() => props.deleteSongFromPlayList(e)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p style={{ color: \"white\", fontSize: \"22px\", marginTop: \"10px\" }}>\r\n            No songs found in this playlist\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Songs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ListCheck from \"./SongsSelect\";\r\nimport SongsPlaylist from \"./SongsPlaylist\";\r\n\r\nfunction PlayListSongs(props) {\r\n  const [addButton, setAddButton] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const toggleAdd = () => {\r\n    setAddButton(!addButton);\r\n  };\r\n\r\n  const updateInLocalStorage = (list, name) => {\r\n    let plist = JSON.parse(localStorage.getItem(\"playLists\"));\r\n    let plistModified = plist.filter((element) => element.name !== name);\r\n    plistModified.push(list[0]);\r\n    localStorage.setItem(\"playLists\", JSON.stringify(plistModified));\r\n  };\r\n  const listSong = JSON.parse(localStorage.getItem(\"songs\"));\r\n  const deleteSong = (name) => {\r\n    console.log(\"deleting...\", name);\r\n    console.log(list);\r\n    let listMOd = list.map((ele) => {\r\n      ele.songs = [...ele.songs.filter((e) => e !== name)];\r\n      return ele;\r\n    });\r\n    console.log(listMOd);\r\n    updateInLocalStorage(listMOd, props.name);\r\n    setList(listMOd);\r\n  };\r\n\r\n  function shuffle(array) {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  const schuffle = () => {\r\n    console.log(list);\r\n    console.log(\"schulling\");\r\n    let dummyArray = [...list[0].songs];\r\n    let shf = shuffle(dummyArray);\r\n    list[0].songs = shf;\r\n    console.log(list);\r\n\r\n    setList([...list]);\r\n  };\r\n  useEffect(() => {\r\n    let plist = JSON.parse(localStorage.getItem(\"playLists\"));\r\n    let plistModified = plist.filter((element) => element.name === props.name);\r\n\r\n    setList(plistModified);\r\n  }, [addButton]);\r\n  return (\r\n    <div>\r\n      <div className=\"addcontainer\">\r\n        <p style={{ color: \"white\", fontSize: \"18px\" }}>\r\n          Playlist : {props.name}\r\n        </p>\r\n        {addButton && (\r\n          <ListCheck list={listSong} playName={props.name} toggle={toggleAdd} />\r\n        )}\r\n\r\n        {!addButton && (\r\n          <button\r\n            onClick={() => {\r\n              setAddButton(!addButton);\r\n            }}\r\n          >\r\n            Add songs to Playlist\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {!list.songs ? (\r\n        list.map((e) => (\r\n          <SongsPlaylist\r\n            list={e}\r\n            deleteSongFromPlayList={deleteSong}\r\n            schuffle={schuffle}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p style={{ color: \"white\", fontSize: \"18px\", marginTop: \"10px\" }}>\r\n          No songs to playlist\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayListSongs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PlayListsItem from \"./PlayListsItem\";\r\nimport PlayListSongs from \"./PlayListSongs\";\r\n\r\nfunction PlayListsList(props) {\r\n  const [selected, setSelected] = useState(null);\r\n  const [selectedplayList, setSelectedplayList] = useState({});\r\n\r\n  const onPlaylistSelect = (ele) => {\r\n    console.log(\"Selected\", ele);\r\n    setSelected(ele);\r\n  };\r\n\r\n  const display = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          margin: \"20px 20px\",\r\n\r\n          margin: \"1% 21% 2% 21%\",\r\n        }}\r\n      >\r\n        {props.list &&\r\n          props.list.map((play) => (\r\n            <PlayListsItem\r\n              id={play.name}\r\n              key={play.name + play.create}\r\n              name={play.name}\r\n              created={play.create}\r\n              onPlaylistSelect={onPlaylistSelect}\r\n            />\r\n          ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selected !== null) props.displayCreate(false);\r\n    const l = props.list && props.list.filter((e) => e.name === selected);\r\n\r\n    setSelectedplayList(l);\r\n  }, [selected]);\r\n\r\n  return (\r\n    <div>\r\n      {!selected ? (\r\n        display()\r\n      ) : (\r\n        <div>\r\n          <PlayListSongs name={selected} list={selectedplayList} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayListsList;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction CreatePlaylist(props) {\r\n  const [i, seti] = useState(\"\");\r\n\r\n  const createPlay = () => {\r\n    props.create(i);\r\n    seti(\"\");\r\n  };\r\n  return (\r\n    <div className=\"createPlaylist\">\r\n      <span\r\n        className=\"createButton\"\r\n        style={{\r\n          margin: \"5px\",\r\n          padding: \"5px\",\r\n          fontSize: \"25px\",\r\n          color: \"#fff\",\r\n        }}\r\n      >\r\n        Create Playlists\r\n      </span>\r\n      <input\r\n        style={{ fontSize: \"18px\", width: \"300px\" }}\r\n        type=\"text\"\r\n        onChange={(e) => seti(e.target.value)}\r\n        value={i}\r\n        placeholder=\"Name of PlayList..\"\r\n      ></input>\r\n      <button\r\n        style={{ fontSize: \"18px\", width: \"120px\", padding: \"8px\" }}\r\n        onClick={() => {\r\n          createPlay();\r\n        }}\r\n      >\r\n        create\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePlaylist;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PlayListsList from \"./PlayListsList\";\r\nimport CreatePlaylist from \"./CreatePlaylist\";\r\n\r\nfunction Playlists() {\r\n  const [list, setList] = useState([]);\r\n  const [displayCreate, setDisplayCreate] = useState(true);\r\n\r\n  const createPlaylist = (name) => {\r\n    list.push({ name: name, songs: [], create: new Date() });\r\n    window.localStorage.setItem(\"playLists\", JSON.stringify(list));\r\n    setList(list);\r\n    setList(JSON.parse(localStorage.getItem(\"playLists\")));\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"rendering play lists\");\r\n    if (!JSON.parse(localStorage.getItem(\"playLists\"))) {\r\n      localStorage.setItem(\"playLists\", JSON.stringify([]));\r\n    }\r\n    setList(JSON.parse(localStorage.getItem(\"playLists\")));\r\n  }, []);\r\n  useEffect(() => {}, [list]);\r\n\r\n  const toggleDisplayCreate = (t) => {\r\n    setDisplayCreate(t);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"rendering play lists\");\r\n  });\r\n  return (\r\n    <div>\r\n      <PlayListsList list={list} displayCreate={toggleDisplayCreate} />\r\n      {displayCreate && <CreatePlaylist create={createPlaylist} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playlists;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Songs from \"./Songs\";\r\nimport Playlists from \"./Playlists\";\r\n\r\nfunction Music() {\r\n  const [song, setSong] = useState(true);\r\n  const [play, setPlay] = useState(false);\r\n  const [songsList, setSongList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/photos\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          result.length = 100;\r\n          // console.log(result);\r\n          setSongList(result);\r\n          window.localStorage.setItem(\"songs\", JSON.stringify(result));\r\n          !window.localStorage.getItem(\"playLists\", JSON.stringify([])) &&\r\n            window.localStorage.getItem(\"playLists\", JSON.stringify([]));\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n\r\n    return () => {\r\n      // console.log(\"cleaned\");\r\n      //window.localStorage.removeItem(\"songs\");\r\n    };\r\n  }, []);\r\n\r\n  const onClickHandler = () => {\r\n    setSong(true);\r\n    setPlay(false);\r\n  };\r\n  const onClickHandlerPlayList = () => {\r\n    setPlay(true);\r\n    setSong(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"button-container\">\r\n        <button\r\n          style={{ fontSize: \"18px\", width: \"150px\", padding: \"8px\" }}\r\n          onClick={() => onClickHandler()}\r\n        >\r\n          All Songs\r\n        </button>\r\n        <button\r\n          style={{ fontSize: \"18px\", width: \"150px\", padding: \"8px\" }}\r\n          onClick={() => {\r\n            console.log(\"clicked play\");\r\n            onClickHandlerPlayList(true);\r\n          }}\r\n        >\r\n          Playlists\r\n        </button>\r\n      </div>\r\n      {song && <Songs list={JSON.parse(localStorage.getItem(\"songs\"))} />}\r\n      {play && <Playlists />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Music;\r\n","import Music from \"./components/Music\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Music />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}